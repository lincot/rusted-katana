#![no_std]
#![feature(test)]

extern crate test;
use least_larger::least_larger;
use test::{black_box, Bencher};

#[bench]
fn bench(bencher: &mut Bencher) {
    let a = black_box(&[
        -946, 428, 381, -674, -703, 144, -932, 987, 581, 466, 308, -788, 79, 394, -563, 933, 819,
        -799, -653, -504, -181, 690, 548, 790, -560, 794, 52, -420, -703, -90, 69, 258, 939, -48,
        911, 323, 997, 138, 807, 939, -612, -499, 907, -785, -155, 812, 999, -27, 762, -961, -608,
        245, -696, 558, -681, 644, -730, 483, 819, 502, -595, -267, -802, -724, -2, -927, 913, 183,
        527, 502, 14, -421, 458, 280, 137, -767, 740, -340, 776, 397, -936, -921, -96, -854, 856,
        -163, -77, -924, -911, -52, 590, 713, 430, -378, 144, 775, -375, -534, 341, -409, 933,
        -833, 100, 127, 878, -166, -819, 67, 499, -274, -663, -661, -61, 711, -450, -554, -575,
        791, 329, 852, -963, -374, -974, -518, -142, 947, 575, -684, 114, -340, 474, -507, -952,
        -742, -588, 934, -177, 620, 899, -835, -384, -129, 468, -43, 996, 405, 288, -118, 740, 772,
        -904, -160, -278, -472, 185, -774, 73, 677, -10, -507, 110, -29, -133, 779, -895, -338,
        188, -838, 615, -178, -703, 387, 76, 494, 837, -645, 289, 113, 202, -479, -327, -456, -808,
        159, 847, -879, 684, 862, 516, 851, -221, 175, 63, -350, -593, -157, -483, 895, -939, -798,
        11, -294, 114, 927, -199, 385, -525, -413, 801, 651, 569, -59, -102, -758, 46, 367, 517,
        -743, 380, 537, -803, -183, -152, 297, 390, 533, 339, -305, 538, -392, 533, 522, -379, -32,
        -953, 553, 811, 861, -190, -362, 69, 499, -189, 638, 773, -112, 116, -202, 174, 905, 338,
        -926, 934, 148, 621, -615, -284, 242, 23, 168, 303, -244, -466, -512, 877, -424, 615, 490,
        -443, -711, 780, -340, -912, -53, 459, -924, -854, -181, 461, 418, 654, -708, -157, 302,
        -146, -935, -237, 871, 808, 413, 691, 31, -364, 316, -712, 614, -260, -585, -754, -899,
        -346, -677, -655, 524, 496, -752, -999, -678, -663, -912, 598, -220, -121, -944, 337, 816,
        153, -413, -209, -757, 107, 347, -397, -376, 40, 239, 644, -474, -757, 539, -991, 538, 941,
        -541, 574, -535, 818, 222, 562, 916, -590, 614, 225, -588, -315, 121, 633, -614, 993, 56,
        -120, 981, 559, -620, -694, 64, -150, 964, 382, 774, -973, 626, 873, -282, 504, 529, 148,
        969, -234, 803, -925, 259, -472, -644, 280, -827, -98, 284, 787, -980, 842, 542, -704,
        -551, -294, 628, 909, 294, 206, -367, 834, -997, -953, 311, -141, -879, 352, -486, 27,
        -899, -403, 634, -285, 327, -354, -129, -516, 58, -72, 558, 529, -181, -878, -491, -896,
        -531, -813, 927, 951, -679, -380, -986, 368, 296, -627, 671, 57, -533, -566, 668, 775, -26,
        -279, -772, -921, -275, -626, 428, 535, 26, 94, -499, -104, -146, -947, -989, -919, -128,
        -735, -705, -763, 99, -914, -662, 584, 351, 83, 365, -863, 540, -153, -532, 177, 812, 539,
        -354, -914, 379, -629, 912, -861, 904, -490, -220, -544, -330, -765, 945, -429, 925, 573,
        94, 389, -10, -269, -569, 888, -763, 830, 331, 378, -345, 729, 224, 482, 867, -779, -846,
        -670, 391, -786, -500, -36, 653, 228, 158, 430, 62, -565, -365, 89, 907, 357, -635, -788,
        -216, -66, 630, 354, 514, -967, -370, -164, 143, -889, -216, -207, -766, 192, -592, 1,
        -153, -394, -591, 469, 817, -466, -574, 208, 932, 459, -642, 782, -868, 888, 807, 126, 794,
        968, 850, 33, 983, -115, 673, 911, -599, -203, 952, -289, -161, 809, -133, -782, 504, -429,
        -22, 471, -605, 70, 7, -986, -727, -28, 640, -457, 87, 395, -829, -185, -300, -319, -353,
        -232, -59, -622, 536, 182, -580, 799, -363, -240, 726, -604, 488, 730, -276, 202, -6, -576,
        989, -421, -284, 315, 616, 661, 226, 376, 335, -574, -367, -713, 560, -802, -838, 110, 8,
        -837, -427, -968, -792, -961, -879, 51, -145, 998, 524, 264, 225, -71, 76, 873, -822, -826,
        710, -894, 988, 364, 973, 687, 853, 205, 437, 809, -415, -248, -274, -646, 785, -742, 953,
        861, 239, -872, -896, 639, 773, -198, -131, 245, -341, -123, -775, 945, 44, -433, 376, 721,
        975, -457, -628, 664, 263, -589, -232, -141, 923, 77, 373, -914, -187, -262, -212, -613,
        -886, -456, 197, 188, 82, 753, -144, -375, -537, -379, 294, -30, -166, 980, 206, -368,
        -498, -30, -110, 412, -871, 844, 433, -124, 211, -619, -460, 308, -251, 954, -487, -704,
        884, -297, -361, 199, 67, 814, -888, -662, -892, 198, -135, -153, -59, -386, 198, 240,
        -648, -758, -525, -177, -620, -742, 921, 246, 681, -812, 30, -86, 277, -340, 853, 726,
        -384, -766, -473, -908, 344, 208, -589, -208, 289, 273, 33, -368, 538, 954, -505, 327,
        -692, -245, -571, 181, 816, 565, -554, 931, -345, 673, 630, -221, -734, -594, 492, -263,
        -703, -39, 111, -842, 187, 38, 341, -785, -431, 960, 90, 868, -160, -159, 366, -662, 463,
        803, -292, -452, 987, -655, -445, 248, 295, -520, 127, -637, -902, 968, 860, 23, -876, 27,
        -733, 497, 154, 746, -725, -919, 214, 166, -991, -11, 424, 818, -445, -734, -801, -814,
        -123, 195, -3, 486, 523, 500, -902, -432, -872, 314, 961, 575, -601, 583, 212, 306, -507,
        252, 492, -45, 294, -834, -405, 761, 515, 149, 667, 791, -10, -661, -916, -224, 662, -407,
        534, 886, 717, -124, -965, 393, -912, -811, -574, 560, 419, 915, -834, 110, 163, -932, 467,
        723, 699, 670, 308, 676, -920, 752, 665, -871, 86, -932, 116, -549, 206, 169, 85, -342,
        -286, 55, -832, 836, 618, -409, 784, 208, -239, -823, -412, -563, 472, 616, 991, 881, -952,
        821, -605, -982, 738, 933, 544, -5, -989, 888, 381, 574, -904, -175, -731, 129, 67, 815,
        241, -687, -89, -306, 827, 981, -927, -98, 721, 663, -718, 885, -439, -651, 893, -638, 159,
        -281, 502, 279, 647, -59, -174, -827, -47, 866, -334, 962, 704, -150, -339, 304, -69, 338,
        -938, 397, 934, -407, -244, -874, -581, -77, -47, 37, 483, -328, 915, -761, -902, 365, 889,
        620, -41, -212, -574, 888, 93, 608, -21, -351, 830, 42, -878, -476, -350, 529, -21, -545,
        8,
    ]);
    let i = black_box(160);
    bencher.iter(|| least_larger(a, i));
}
